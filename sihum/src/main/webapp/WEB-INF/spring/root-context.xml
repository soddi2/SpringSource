<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<!-- Connection Pool / SqlSession -->
	<context:component-scan base-package="com.spring.service" />
	<mybatis-spring:scan base-package="com.spring.mapper"/>
	
	<!-- connection pool -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl"/>
		<property name="username" value="javaDB"/>
		<property name="password" value="12345"/>
	</bean>
	<bean id="ds" class="com.zaxxer.hikari.HikariDataSource" 
					destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	<!-- mabatis 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
	</bean>
	
	<!-- 트랜잭션 설정 -->
	<!-- 트랜잭션 매니저 설정 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"/>
	</bean> -->
	
	<!-- 트랜잭션 어드바이스 설정 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/> get으로 시작하는 메서드들은 모두 트랜잭션 처리를 하지 않음
			<tx:method name="addData"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.spring.service..*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config> -->

	<!-- 트랜잭션 어노테이션(AOP) 설정 -->
	<!-- <tx:annotation-driven/>
	<aop:aspectj-autoproxy /> -->
		
</beans>
