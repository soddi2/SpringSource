/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-07-14 01:56:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class changePwd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>비밀번호 변경</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write("\tbody{\r\n");
      out.write("\t\tmargin-top:100px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- alert창 띄우기 -->\r\n");
      out.write("<script> \r\n");
      out.write("   \tlet msg = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${info}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("   \tconsole.log(msg);\r\n");
      out.write("   \tif(msg !== ''){\r\n");
      out.write("   \t\talert(msg);\r\n");
      out.write("   \t}\r\n");
      out.write("</script>\r\n");
      out.write("</head><!-- script는 html만 안 벗어나게 -->\r\n");
      out.write("\t<!-- jquery,jquery-validate : 순서 중요, 둘이 세트 -->\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.js\"></script>\r\n");
      out.write("    <!-- validation 사용자 작성 코드 삽입-->\r\n");
      out.write("    <script src=\"/resources/js/modify.js\"></script>\r\n");
      out.write("    <!-- 수정 -->\r\n");
      out.write("    <script>\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"button\").click(function(e){\r\n");
      out.write("\t\t\t\t// http/location:8081/modify + put\r\n");
      out.write("\t\t\t\tlet param = {\r\n");
      out.write("\t\t\t\t\t\tpassword : $(\"input[name='password']\").val(),\r\n");
      out.write("\t\t\t\t\t\tnew_password : $(\"input[name='new_password']\").val(),\r\n");
      out.write("\t\t\t\t\t\tconfirm_password : $(\"input[name='confirm_password']\").val()\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : '/modify',\r\n");
      out.write("\t\t\t\t\ttype : 'put',\r\n");
      out.write("\t\t\t\t\tcontentType : \"application/json\",\r\n");
      out.write("\t\t\t\t\tdata : JSON.stringify(param),\r\n");
      out.write("\t\t\t\t\tsuccess:function(data){ //200\r\n");
      out.write("\t\t\t\t\t\talert(data);\r\n");
      out.write("\t\t\t\t\t\tlocation.href='/';\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror:function(xhr,txtStatus,error){ //400 xhr?\r\n");
      out.write("\t\t\t\t\t\t//alert(xhr.responseText);\r\n");
      out.write("\t\t\t\t\t\tlet msg = xhr.responseText;\r\n");
      out.write("\t\t\t\t\t\tif(msg === 'fail') {\r\n");
      out.write("\t\t\t\t\t\talert('현재 비밀번호를 확인해 주세요');\r\n");
      out.write("\t\t\t\t\t\t$(\"#confirm_password\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#confirm_password\").focus();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"card border-success mb-3 mx-auto\" style=\"max-width: 25rem;\">\r\n");
      out.write("  <div class=\"card-header\">비밀번호 변경</div>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("  \t<form id=\"changePwd\" action=\"/member/changePwd\" method=\"post\">\r\n");
      out.write("  \t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t    \t\t<input type=\"password\" class=\"form-control\" size=\"50\" id=\"password\" name=\"password\" placeholder=\"현재 비밀번호\">\r\n");
      out.write("\t    \t\t<small id=\"password\" class=\"text-info\"></small>\r\n");
      out.write("\t    \t</div>\r\n");
      out.write("    \t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t    <input type=\"password\" class=\"form-control\" size=\"50\" id=\"new_password\" name=\"new_password\" placeholder=\"새 비밀번호\">  \r\n");
      out.write("\t\t\t    <small id=\"new_password\" class=\"text-info\"></small> \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row\"> \r\n");
      out.write("\t\t\t    <input type=\"password\" class=\"form-control\" size=\"50\" id=\"confirm_password\" name=\"confirm_password\" placeholder=\"새 비밀번호 확인\">\r\n");
      out.write("\t\t\t    <small id=\"confirm_password\" class=\"text-info\"></small> \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group row \"> \r\n");
      out.write("\t\t\t    <button type=\"submit\" class=\"btn btn-primary btn-block\">변경</button>\r\n");
      out.write("\t\t\t</div> \r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
